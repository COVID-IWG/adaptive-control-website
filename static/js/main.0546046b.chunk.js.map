{"version":3,"sources":["components/data sync /^/.//.*/.svg$","components/data/AP_map_Rt.svg","components/data/AP_map_status.svg","components/data/AP_plot_I_rate.svg","components/data/AP_plot_Rt.svg","components/data/AP_plot_total_I.svg","components/data/AS_map_Rt.svg","components/data/AS_map_status.svg","components/data/AS_plot_I_rate.svg","components/data/AS_plot_Rt.svg","components/data/AS_plot_total_I.svg","components/data/BR_map_Rt.svg","components/data/BR_map_status.svg","components/data/BR_plot_I_rate.svg","components/data/BR_plot_Rt.svg","components/data/BR_plot_total_I.svg","components/data/CH_map_Rt.svg","components/data/CH_map_status.svg","components/data/CH_plot_I_rate.svg","components/data/CH_plot_Rt.svg","components/data/CH_plot_total_I.svg","components/data/CT_map_Rt.svg","components/data/CT_map_status.svg","components/data/DL_map_Rt.svg","components/data/DL_map_status.svg","components/data/DL_plot_I_rate.svg","components/data/DL_plot_Rt.svg","components/data/DL_plot_total_I.svg","components/data/DN_plot_I_rate.svg","components/data/DN_plot_Rt.svg","components/data/DN_plot_total_I.svg","components/data/GA_map_Rt.svg","components/data/GA_map_status.svg","components/data/GA_plot_I_rate.svg","components/data/GA_plot_Rt.svg","components/data/GA_plot_total_I.svg","components/data/GJ_map_Rt.svg","components/data/GJ_map_status.svg","components/data/GJ_plot_I_rate.svg","components/data/GJ_plot_Rt.svg","components/data/GJ_plot_total_I.svg","components/data/HP_map_Rt.svg","components/data/HP_map_status.svg","components/data/HR_map_Rt.svg","components/data/HR_map_status.svg","components/data/HR_plot_I_rate.svg","components/data/HR_plot_Rt.svg","components/data/HR_plot_total_I.svg","components/data/IN_map_Rt.svg","components/data/IN_map_Rt_blah.svg","components/data/IN_map_Rt_old.svg","components/data/IN_map_status.svg","components/data/IN_plot_I_rate.svg","components/data/IN_plot_Rt.svg","components/data/IN_plot_total_I.svg","components/data/JH_map_Rt.svg","components/data/JH_map_status.svg","components/data/KA_map_Rt.svg","components/data/KA_map_status.svg","components/data/KA_plot_I_rate.svg","components/data/KA_plot_Rt.svg","components/data/KA_plot_total_I.svg","components/data/KL_map_Rt.svg","components/data/KL_map_status.svg","components/data/KL_plot_I_rate.svg","components/data/KL_plot_Rt.svg","components/data/KL_plot_total_I.svg","components/data/MH_map_Rt.svg","components/data/MH_map_status.svg","components/data/MH_plot_I_rate.svg","components/data/MH_plot_Rt.svg","components/data/MH_plot_total_I.svg","components/data/ML_map_Rt.svg","components/data/ML_map_status.svg","components/data/ML_plot_I_rate.svg","components/data/ML_plot_Rt.svg","components/data/ML_plot_total_I.svg","components/data/MN_map_Rt.svg","components/data/MN_map_status.svg","components/data/MN_plot_I_rate.svg","components/data/MN_plot_Rt.svg","components/data/MN_plot_total_I.svg","components/data/MP_map_Rt.svg","components/data/MP_map_status.svg","components/data/MP_plot_I_rate.svg","components/data/MP_plot_Rt.svg","components/data/MP_plot_total_I.svg","components/data/NA_map_Rt.svg","components/data/NA_map_status.svg","components/data/OR_map_Rt.svg","components/data/OR_map_status.svg","components/data/OR_plot_I_rate.svg","components/data/OR_plot_Rt.svg","components/data/OR_plot_total_I.svg","components/data/PB_map_Rt.svg","components/data/PB_map_status.svg","components/data/PB_plot_I_rate.svg","components/data/PB_plot_Rt.svg","components/data/PB_plot_total_I.svg","components/data/PY_plot_I_rate.svg","components/data/PY_plot_Rt.svg","components/data/PY_plot_total_I.svg","components/data/RJ_map_Rt.svg","components/data/RJ_map_status.svg","components/data/RJ_plot_I_rate.svg","components/data/RJ_plot_Rt.svg","components/data/RJ_plot_total_I.svg","components/data/SK_map_Rt.svg","components/data/SK_map_status.svg","components/data/SK_plot_I_rate.svg","components/data/SK_plot_Rt.svg","components/data/SK_plot_total_I.svg","components/data/TG_map_Rt.svg","components/data/TG_map_status.svg","components/data/TG_plot_I_rate.svg","components/data/TG_plot_Rt.svg","components/data/TG_plot_total_I.svg","components/data/TN_map_Rt.svg","components/data/TN_map_status.svg","components/data/TN_plot_I_rate.svg","components/data/TN_plot_Rt.svg","components/data/TN_plot_total_I.svg","components/data/TR_map_Rt.svg","components/data/TR_map_status.svg","components/data/UP_map_Rt.svg","components/data/UP_map_status.svg","components/data/UP_plot_I_rate.svg","components/data/UP_plot_Rt.svg","components/data/UP_plot_total_I.svg","components/data/UT_map_Rt.svg","components/data/UT_map_status.svg","components/data/UT_plot_I_rate.svg","components/data/UT_plot_Rt.svg","components/data/UT_plot_total_I.svg","components/data/WB_map_Rt.svg","components/data/WB_map_status.svg","components/data/WB_plot_I_rate.svg","components/data/WB_plot_Rt.svg","components/data/WB_plot_total_I.svg","components/Plot.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","state_codes","Plot","props","svgRef","React","createRef","plotKey","this","geography","innerRef","key","src","require","viztype","onError","console","log","onLoad","x","node","current","Component","Details","unit","Card","Title","className","Table","size","borderless","Badge","pill","variant","map_status","style","map_Rt","plot_Rt","plot_I_rate","plot_total_I","cardHeader","name","Header","as","class","App","state","vizType","Row","Col","Body","Subtitle","sm","Form","Group","controlId","Label","Control","custom","onChange","setState","target","value","label","k","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,6LCI9BC,EAAc,CAIvB,GA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","file":"static/js/main.0546046b.chunk.js","sourcesContent":["var map = {\n\t\"./AP_map_Rt.svg\": 29,\n\t\"./AP_map_status.svg\": 30,\n\t\"./AP_plot_I_rate.svg\": 31,\n\t\"./AP_plot_Rt.svg\": 32,\n\t\"./AP_plot_total_I.svg\": 33,\n\t\"./AS_map_Rt.svg\": 34,\n\t\"./AS_map_status.svg\": 35,\n\t\"./AS_plot_I_rate.svg\": 36,\n\t\"./AS_plot_Rt.svg\": 37,\n\t\"./AS_plot_total_I.svg\": 38,\n\t\"./BR_map_Rt.svg\": 39,\n\t\"./BR_map_status.svg\": 40,\n\t\"./BR_plot_I_rate.svg\": 41,\n\t\"./BR_plot_Rt.svg\": 42,\n\t\"./BR_plot_total_I.svg\": 43,\n\t\"./CH_map_Rt.svg\": 44,\n\t\"./CH_map_status.svg\": 45,\n\t\"./CH_plot_I_rate.svg\": 46,\n\t\"./CH_plot_Rt.svg\": 47,\n\t\"./CH_plot_total_I.svg\": 48,\n\t\"./CT_map_Rt.svg\": 49,\n\t\"./CT_map_status.svg\": 50,\n\t\"./DL_map_Rt.svg\": 51,\n\t\"./DL_map_status.svg\": 52,\n\t\"./DL_plot_I_rate.svg\": 53,\n\t\"./DL_plot_Rt.svg\": 54,\n\t\"./DL_plot_total_I.svg\": 55,\n\t\"./DN_plot_I_rate.svg\": 56,\n\t\"./DN_plot_Rt.svg\": 57,\n\t\"./DN_plot_total_I.svg\": 58,\n\t\"./GA_map_Rt.svg\": 59,\n\t\"./GA_map_status.svg\": 60,\n\t\"./GA_plot_I_rate.svg\": 61,\n\t\"./GA_plot_Rt.svg\": 62,\n\t\"./GA_plot_total_I.svg\": 63,\n\t\"./GJ_map_Rt.svg\": 64,\n\t\"./GJ_map_status.svg\": 65,\n\t\"./GJ_plot_I_rate.svg\": 66,\n\t\"./GJ_plot_Rt.svg\": 67,\n\t\"./GJ_plot_total_I.svg\": 68,\n\t\"./HP_map_Rt.svg\": 69,\n\t\"./HP_map_status.svg\": 70,\n\t\"./HR_map_Rt.svg\": 71,\n\t\"./HR_map_status.svg\": 72,\n\t\"./HR_plot_I_rate.svg\": 73,\n\t\"./HR_plot_Rt.svg\": 74,\n\t\"./HR_plot_total_I.svg\": 75,\n\t\"./IN_map_Rt.svg\": 76,\n\t\"./IN_map_Rt_blah.svg\": 77,\n\t\"./IN_map_Rt_old.svg\": 78,\n\t\"./IN_map_status.svg\": 79,\n\t\"./IN_plot_I_rate.svg\": 80,\n\t\"./IN_plot_Rt.svg\": 81,\n\t\"./IN_plot_total_I.svg\": 82,\n\t\"./JH_map_Rt.svg\": 83,\n\t\"./JH_map_status.svg\": 84,\n\t\"./KA_map_Rt.svg\": 85,\n\t\"./KA_map_status.svg\": 86,\n\t\"./KA_plot_I_rate.svg\": 87,\n\t\"./KA_plot_Rt.svg\": 88,\n\t\"./KA_plot_total_I.svg\": 89,\n\t\"./KL_map_Rt.svg\": 90,\n\t\"./KL_map_status.svg\": 91,\n\t\"./KL_plot_I_rate.svg\": 92,\n\t\"./KL_plot_Rt.svg\": 93,\n\t\"./KL_plot_total_I.svg\": 94,\n\t\"./MH_map_Rt.svg\": 95,\n\t\"./MH_map_status.svg\": 96,\n\t\"./MH_plot_I_rate.svg\": 97,\n\t\"./MH_plot_Rt.svg\": 98,\n\t\"./MH_plot_total_I.svg\": 99,\n\t\"./ML_map_Rt.svg\": 100,\n\t\"./ML_map_status.svg\": 101,\n\t\"./ML_plot_I_rate.svg\": 102,\n\t\"./ML_plot_Rt.svg\": 103,\n\t\"./ML_plot_total_I.svg\": 104,\n\t\"./MN_map_Rt.svg\": 105,\n\t\"./MN_map_status.svg\": 106,\n\t\"./MN_plot_I_rate.svg\": 107,\n\t\"./MN_plot_Rt.svg\": 108,\n\t\"./MN_plot_total_I.svg\": 109,\n\t\"./MP_map_Rt.svg\": 110,\n\t\"./MP_map_status.svg\": 111,\n\t\"./MP_plot_I_rate.svg\": 112,\n\t\"./MP_plot_Rt.svg\": 113,\n\t\"./MP_plot_total_I.svg\": 114,\n\t\"./NA_map_Rt.svg\": 115,\n\t\"./NA_map_status.svg\": 116,\n\t\"./OR_map_Rt.svg\": 117,\n\t\"./OR_map_status.svg\": 118,\n\t\"./OR_plot_I_rate.svg\": 119,\n\t\"./OR_plot_Rt.svg\": 120,\n\t\"./OR_plot_total_I.svg\": 121,\n\t\"./PB_map_Rt.svg\": 122,\n\t\"./PB_map_status.svg\": 123,\n\t\"./PB_plot_I_rate.svg\": 124,\n\t\"./PB_plot_Rt.svg\": 125,\n\t\"./PB_plot_total_I.svg\": 126,\n\t\"./PY_plot_I_rate.svg\": 127,\n\t\"./PY_plot_Rt.svg\": 128,\n\t\"./PY_plot_total_I.svg\": 129,\n\t\"./RJ_map_Rt.svg\": 130,\n\t\"./RJ_map_status.svg\": 131,\n\t\"./RJ_plot_I_rate.svg\": 132,\n\t\"./RJ_plot_Rt.svg\": 133,\n\t\"./RJ_plot_total_I.svg\": 134,\n\t\"./SK_map_Rt.svg\": 135,\n\t\"./SK_map_status.svg\": 136,\n\t\"./SK_plot_I_rate.svg\": 137,\n\t\"./SK_plot_Rt.svg\": 138,\n\t\"./SK_plot_total_I.svg\": 139,\n\t\"./TG_map_Rt.svg\": 140,\n\t\"./TG_map_status.svg\": 141,\n\t\"./TG_plot_I_rate.svg\": 142,\n\t\"./TG_plot_Rt.svg\": 143,\n\t\"./TG_plot_total_I.svg\": 144,\n\t\"./TN_map_Rt.svg\": 145,\n\t\"./TN_map_status.svg\": 146,\n\t\"./TN_plot_I_rate.svg\": 147,\n\t\"./TN_plot_Rt.svg\": 148,\n\t\"./TN_plot_total_I.svg\": 149,\n\t\"./TR_map_Rt.svg\": 150,\n\t\"./TR_map_status.svg\": 151,\n\t\"./UP_map_Rt.svg\": 152,\n\t\"./UP_map_status.svg\": 153,\n\t\"./UP_plot_I_rate.svg\": 154,\n\t\"./UP_plot_Rt.svg\": 155,\n\t\"./UP_plot_total_I.svg\": 156,\n\t\"./UT_map_Rt.svg\": 157,\n\t\"./UT_map_status.svg\": 158,\n\t\"./UT_plot_I_rate.svg\": 159,\n\t\"./UT_plot_Rt.svg\": 160,\n\t\"./UT_plot_total_I.svg\": 161,\n\t\"./WB_map_Rt.svg\": 162,\n\t\"./WB_map_status.svg\": 163,\n\t\"./WB_plot_I_rate.svg\": 164,\n\t\"./WB_plot_Rt.svg\": 165,\n\t\"./WB_plot_total_I.svg\": 166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","module.exports = __webpack_public_path__ + \"static/media/AP_map_Rt.aa6b0674.svg\";","module.exports = __webpack_public_path__ + \"static/media/AP_map_status.47fbe84a.svg\";","module.exports = __webpack_public_path__ + \"static/media/AP_plot_I_rate.e5d9e320.svg\";","module.exports = __webpack_public_path__ + \"static/media/AP_plot_Rt.edd1c439.svg\";","module.exports = __webpack_public_path__ + \"static/media/AP_plot_total_I.3c88965a.svg\";","module.exports = __webpack_public_path__ + \"static/media/AS_map_Rt.f15cfd75.svg\";","module.exports = __webpack_public_path__ + \"static/media/AS_map_status.15c49222.svg\";","module.exports = __webpack_public_path__ + \"static/media/AS_plot_I_rate.319189b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/AS_plot_Rt.8397dd07.svg\";","module.exports = __webpack_public_path__ + \"static/media/AS_plot_total_I.81dd58be.svg\";","module.exports = __webpack_public_path__ + \"static/media/BR_map_Rt.ea16a4e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/BR_map_status.6d04e8ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/BR_plot_I_rate.aa16e2a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/BR_plot_Rt.00b3a364.svg\";","module.exports = __webpack_public_path__ + \"static/media/BR_plot_total_I.6a860b92.svg\";","module.exports = __webpack_public_path__ + \"static/media/CH_map_Rt.d7eadb6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/CH_map_status.52562ea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/CH_plot_I_rate.bbdeb1b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/CH_plot_Rt.256eee5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/CH_plot_total_I.88c98c87.svg\";","module.exports = __webpack_public_path__ + \"static/media/CT_map_Rt.565ce564.svg\";","module.exports = __webpack_public_path__ + \"static/media/CT_map_status.ec6dd696.svg\";","module.exports = __webpack_public_path__ + \"static/media/DL_map_Rt.f91301f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/DL_map_status.537e2af8.svg\";","module.exports = __webpack_public_path__ + \"static/media/DL_plot_I_rate.218acbf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/DL_plot_Rt.fbad2d56.svg\";","module.exports = __webpack_public_path__ + \"static/media/DL_plot_total_I.1093603b.svg\";","module.exports = __webpack_public_path__ + \"static/media/DN_plot_I_rate.877e5e54.svg\";","module.exports = __webpack_public_path__ + \"static/media/DN_plot_Rt.9cd5d6a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/DN_plot_total_I.d3040adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/GA_map_Rt.cf97e19f.svg\";","module.exports = __webpack_public_path__ + \"static/media/GA_map_status.97d734f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/GA_plot_I_rate.0cee7b52.svg\";","module.exports = __webpack_public_path__ + \"static/media/GA_plot_Rt.f652ff25.svg\";","module.exports = __webpack_public_path__ + \"static/media/GA_plot_total_I.46a71f2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/GJ_map_Rt.9b448506.svg\";","module.exports = __webpack_public_path__ + \"static/media/GJ_map_status.d7752151.svg\";","module.exports = __webpack_public_path__ + \"static/media/GJ_plot_I_rate.498f3519.svg\";","module.exports = __webpack_public_path__ + \"static/media/GJ_plot_Rt.a17b9c0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/GJ_plot_total_I.919dfdf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/HP_map_Rt.c8642ccd.svg\";","module.exports = __webpack_public_path__ + \"static/media/HP_map_status.c7067d24.svg\";","module.exports = __webpack_public_path__ + \"static/media/HR_map_Rt.8ce8efc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/HR_map_status.dda3e09a.svg\";","module.exports = __webpack_public_path__ + \"static/media/HR_plot_I_rate.61d73506.svg\";","module.exports = __webpack_public_path__ + \"static/media/HR_plot_Rt.1765e156.svg\";","module.exports = __webpack_public_path__ + \"static/media/HR_plot_total_I.6139c980.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_map_Rt.e6100b35.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_map_Rt_blah.794bf1b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_map_Rt_old.0ff8984c.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_map_status.6ea5fe68.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_plot_I_rate.47286e04.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_plot_Rt.ef9b3aa5.svg\";","module.exports = __webpack_public_path__ + \"static/media/IN_plot_total_I.c443a187.svg\";","module.exports = __webpack_public_path__ + \"static/media/JH_map_Rt.3f3ee0b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/JH_map_status.9c905321.svg\";","module.exports = __webpack_public_path__ + \"static/media/KA_map_Rt.6540136c.svg\";","module.exports = __webpack_public_path__ + \"static/media/KA_map_status.444707ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/KA_plot_I_rate.0bef15a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/KA_plot_Rt.59ee4d76.svg\";","module.exports = __webpack_public_path__ + \"static/media/KA_plot_total_I.1c0c4edc.svg\";","module.exports = __webpack_public_path__ + \"static/media/KL_map_Rt.48acd04e.svg\";","module.exports = __webpack_public_path__ + \"static/media/KL_map_status.514999f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/KL_plot_I_rate.b769d649.svg\";","module.exports = __webpack_public_path__ + \"static/media/KL_plot_Rt.f706e9e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/KL_plot_total_I.08219a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/MH_map_Rt.92c26c85.svg\";","module.exports = __webpack_public_path__ + \"static/media/MH_map_status.5f6b1b50.svg\";","module.exports = __webpack_public_path__ + \"static/media/MH_plot_I_rate.bc2cea9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/MH_plot_Rt.a481e75e.svg\";","module.exports = __webpack_public_path__ + \"static/media/MH_plot_total_I.04684a54.svg\";","module.exports = __webpack_public_path__ + \"static/media/ML_map_Rt.9b71baf7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ML_map_status.dfe149c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ML_plot_I_rate.ad700d3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ML_plot_Rt.2c229d5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ML_plot_total_I.5f6a3420.svg\";","module.exports = __webpack_public_path__ + \"static/media/MN_map_Rt.b702ed44.svg\";","module.exports = __webpack_public_path__ + \"static/media/MN_map_status.ce6790fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/MN_plot_I_rate.3c4ad14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/MN_plot_Rt.a0dbfeae.svg\";","module.exports = __webpack_public_path__ + \"static/media/MN_plot_total_I.30c94efc.svg\";","module.exports = __webpack_public_path__ + \"static/media/MP_map_Rt.859c7367.svg\";","module.exports = __webpack_public_path__ + \"static/media/MP_map_status.104ed7d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/MP_plot_I_rate.c9ee3196.svg\";","module.exports = __webpack_public_path__ + \"static/media/MP_plot_Rt.a5498a0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/MP_plot_total_I.1f0367b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/NA_map_Rt.45fa3a45.svg\";","module.exports = __webpack_public_path__ + \"static/media/NA_map_status.fd82e747.svg\";","module.exports = __webpack_public_path__ + \"static/media/OR_map_Rt.c95cf565.svg\";","module.exports = __webpack_public_path__ + \"static/media/OR_map_status.50d1debf.svg\";","module.exports = __webpack_public_path__ + \"static/media/OR_plot_I_rate.b08a2964.svg\";","module.exports = __webpack_public_path__ + \"static/media/OR_plot_Rt.55990d0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/OR_plot_total_I.2ec90499.svg\";","module.exports = __webpack_public_path__ + \"static/media/PB_map_Rt.c0ae683b.svg\";","module.exports = __webpack_public_path__ + \"static/media/PB_map_status.bda40b56.svg\";","module.exports = __webpack_public_path__ + \"static/media/PB_plot_I_rate.5f323ae3.svg\";","module.exports = __webpack_public_path__ + \"static/media/PB_plot_Rt.53905fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/PB_plot_total_I.96998246.svg\";","module.exports = __webpack_public_path__ + \"static/media/PY_plot_I_rate.35edb933.svg\";","module.exports = __webpack_public_path__ + \"static/media/PY_plot_Rt.3345c75e.svg\";","module.exports = __webpack_public_path__ + \"static/media/PY_plot_total_I.ce51a72f.svg\";","module.exports = __webpack_public_path__ + \"static/media/RJ_map_Rt.134cc2c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/RJ_map_status.1bcb5b64.svg\";","module.exports = __webpack_public_path__ + \"static/media/RJ_plot_I_rate.16c2eaa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/RJ_plot_Rt.ab03811f.svg\";","module.exports = __webpack_public_path__ + \"static/media/RJ_plot_total_I.13e4779d.svg\";","module.exports = __webpack_public_path__ + \"static/media/SK_map_Rt.a88b29c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/SK_map_status.59e33038.svg\";","module.exports = __webpack_public_path__ + \"static/media/SK_plot_I_rate.83f6a51c.svg\";","module.exports = __webpack_public_path__ + \"static/media/SK_plot_Rt.46b7126f.svg\";","module.exports = __webpack_public_path__ + \"static/media/SK_plot_total_I.7d5def47.svg\";","module.exports = __webpack_public_path__ + \"static/media/TG_map_Rt.344288fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/TG_map_status.351b7dfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/TG_plot_I_rate.c5680f55.svg\";","module.exports = __webpack_public_path__ + \"static/media/TG_plot_Rt.5af40216.svg\";","module.exports = __webpack_public_path__ + \"static/media/TG_plot_total_I.31788fc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/TN_map_Rt.e300330c.svg\";","module.exports = __webpack_public_path__ + \"static/media/TN_map_status.0f6e8d35.svg\";","module.exports = __webpack_public_path__ + \"static/media/TN_plot_I_rate.aff78acc.svg\";","module.exports = __webpack_public_path__ + \"static/media/TN_plot_Rt.17b80f24.svg\";","module.exports = __webpack_public_path__ + \"static/media/TN_plot_total_I.6c2808d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/TR_map_Rt.95db2a5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/TR_map_status.dd4dec31.svg\";","module.exports = __webpack_public_path__ + \"static/media/UP_map_Rt.3fd3cc4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/UP_map_status.60336eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/UP_plot_I_rate.71606aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/UP_plot_Rt.559186b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/UP_plot_total_I.e8354276.svg\";","module.exports = __webpack_public_path__ + \"static/media/UT_map_Rt.d0adb912.svg\";","module.exports = __webpack_public_path__ + \"static/media/UT_map_status.60e4853b.svg\";","module.exports = __webpack_public_path__ + \"static/media/UT_plot_I_rate.9894c12a.svg\";","module.exports = __webpack_public_path__ + \"static/media/UT_plot_Rt.2adfed2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/UT_plot_total_I.d6f981d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/WB_map_Rt.e636f773.svg\";","module.exports = __webpack_public_path__ + \"static/media/WB_map_status.8e45df5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/WB_plot_I_rate.138c7c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/WB_plot_Rt.d2b42d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/WB_plot_total_I.c1facaeb.svg\";","import React from \"react\";\nimport SVG from 'react-inlinesvg';\n// import plot from './data/AP_plot_Rt.svg'\n\nexport const state_codes = {\n    // \"AN\": \"Andaman and Nicobar Islands\",\n    // \"CH\": \"Chandigarh\",\n    // \"AR\": \"Arunachal Pradesh\",\n    \"AP\": \"Andhra Pradesh\",\n    \"AS\": \"Assam\",\n    \"BR\": \"Bihar\",\n    // \"CT\": \"Chhattisgarh\",\n    \"DL\": \"Delhi\",\n    \"GA\": \"Goa\",\n    \"GJ\": \"Gujarat\",\n    \"HR\": \"Haryana\",\n    // \"HP\": \"Himachal Pradesh\",\n    // \"JK\": \"Jammu and Kashmir\",\n    // \"JH\": \"Jharkhand\",\n    \"KA\": \"Karnataka\",\n    \"KL\": \"Kerala\",\n    \"MP\": \"Madhya Pradesh\",\n    \"MH\": \"Maharashtra\",\n    \"MN\": \"Manipur\",\n    \"ML\": \"Meghalaya\",\n    \"OR\": \"Odisha\",\n    \"PB\": \"Punjab\",\n    \"RJ\": \"Rajasthan\",\n    \"SK\": \"Sikkim\",\n    \"TN\": \"Tamil Nadu\",\n    \"TG\": \"Telangana\",\n    // \"TR\": \"Tripura\",\n    \"UP\": \"Uttar Pradesh\",\n    \"UT\": \"Uttarakhand\",\n    \"WB\": \"West Bengal\",\n}\n\n\nclass Plot extends React.Component { \n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();  \n    }\n    \n    render() {\n        // if (this.props.geography === \"IN\" && (this.props.viztype === \"map_Rt\" || this.props.viztype === \"map_status\"))\n        //     return <div>l o a d i n g . . .</div>\n        const plotKey  = \"plot_\" + this.props.geography\n\n        return <SVG  \n            innerRef={this.svgRef}\n            key={plotKey} \n            // class=\"svg_parent\"\n            src={require(\"./data/\" + this.props.geography +\"_\" + this.props.viztype + \".svg\")}\n            onError={(e) => console.log(e)}\n            onLoad={(x) => {\n                const node = this.svgRef.current;\n                console.log(node)\n                // node.setAttribute(\"preserveAspectRatio\", \"none\")\n                // node.setAttribute(\"width\", \"auto\")\n                // node.setAttribute(\"viewBox\", \"0 0 900 400\")\n                console.log(node)\n            }}\n        />\n        }\n    }\n\n// const Plot = ({viztype, geography}) => {\n//     if (geography === \"IN\" && (viztype === \"map_Rt\" || viztype === \"map_status\"))\n//         return <p>l o a d i n g . . .</p>\n//     const plotKey  = \"plot_\" + geography\n\n//     return <SVG  \n//         key={plotKey} \n//         class=\"my-auto mx_auto\"\n//         src={require(\"./data/\" + geography +\"_\" + viztype + \".svg\")}\n//         onError={(e) => console.log(e)}\n//         onLoad={(x) => {\n//             console.log(x)\n//             console.log(this)\n//         }}\n//     />\n    \n// }\n\nexport default Plot;","import React from 'react';\nimport { Table, Badge } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card'\n\nconst map_status = (unit) => <div>\n<Card.Title className=\"italic\">Adaptive control status (by {unit})</Card.Title>\n    <p>\n    An adaptive control policy sorts geographic units into different policy regimes based on a certain trigger. In the map displayed, each {unit} is colored according to a policy regime based on its <b>reproductive rate</b> (<i>R<sub>t</sub></i>): the number of additional cases in a community that a single person creates. \n    </p>\n    <p>\n        In the policy presented, we restrict movement in each {unit} based on the following criteria:\n        <br></br>\n    </p>\n    <Table size=\"sm\" borderless={true}>\n        <thead>\n            <tr> <th>Policy Regime</th><th>Trigger</th></tr>\n            <tr> <td><Badge pill size=\"lg\" variant=\"danger\">CRITICAL</Badge></td><td><i>R<sub>t</sub></i> &ge; 2</td></tr>\n            <tr> <td><Badge pill size=\"lg\" variant=\"warning\">MODERATE</Badge></td><td><i>1 &le; R<sub>t</sub></i> &lt; 2 </td></tr>\n            <tr> <td><Badge pill size=\"lg\" variant=\"success\">IMPROVING</Badge></td><td><i>R<sub>t</sub></i> &lt; 1</td></tr>\n        </thead>\n    </Table>\n\n    {/* <p>\n    The adaptive nature of the policy means that districts falling under different categories will implement different measures based on estimated reproductive numbers. For example, a critical district may shut down all non-essential travel and require masks, while a green district may allow travel to adjacent green districts.\n    </p> */}\n\n    <p>\n    Our policy simulations use reproductive number as a trigger, but other triggers are possible (such as the infection count doubling time used by the Ministry of Home Affairs).\n    </p>\n</div>\n\nconst map_Rt = (unit) => <div>\n<Card.Title className=\"italic\">Reproductive rate (by {unit})</Card.Title>\n<p>\nFor a given infectious disease, the <b>reproductive rate</b> (<i>R<sub>t</sub></i>) is the number of additional cases in a community that a single person creates. When <i>R<sub>t</sub></i> is less than 1, a disease's spread is manageable. Conversely, when the reproductive number exceeds 1, the number of people infected grows exponentially. An adaptive control policy estimates <i>R<sub>t</sub></i> for a given locale and makes per-{unit} determinations about which activities will be allowed to control the spread of the virus.\n</p>\n<p>This map shows the estimated <i>R<sub>t</sub></i> for each {unit}. Our methods for estimating the reproductive number are described in the whitepaper linked in the \"Methods\" section.</p> \n<Table size=\"sm\" borderless={true}>\n        <thead>\n            <tr> <th>Color</th><th><i>R<sub>t</sub></i></th></tr>\n            <tr> <td><Badge pill style={{\"background-color\": \"#5b7dff\", \"text-color\": \"#5b7dff!important\", \"color\": \"#5b7dff!important\"}}size=\"lg\" >X</Badge></td><td>0</td></tr>\n            <tr> <td><Badge pill style={{\"background-color\": \"#6610f2\", \"text-color\": \"#6610f2!important\", \"color\": \"#6610f2!important\"}}size=\"lg\" >X</Badge></td><td>2</td></tr>\n            <tr> <td><Badge pill style={{\"background-color\": \"#6f42c1\", \"text-color\": \"#6f42c1!important\", \"color\": \"#6f42c1!important\"}}size=\"lg\" >X</Badge></td><td>5</td></tr>\n            <tr> <td><Badge pill style={{\"background-color\": \"#BFBFBF\", \"text-color\": \"#BFBFBF!important\", \"color\": \"#BFBFBF!important\"}}size=\"lg\" >X</Badge></td><td>Missing</td></tr>\n        </thead>\n    </Table>\n\n</div> \nconst plot_Rt = (unit) => <div>\n<Card.Title className=\"italic\">Reproductive rate over time</Card.Title>\n<p>\nFor a given infectious disease, the <b>reproductive rate</b> (<i>R<sub>t</sub></i>) is the number of additional cases in a community that a single person creates. When <i>R<sub>t</sub></i> is less than 1, a disease's spread is manageable. Conversely, when the reproductive number exceeds 1, the number of people infected grows exponentially. An adaptive control policy estimates <i>R<sub>t</sub></i> for a given locale and makes per-{unit} determinations about which activities will be allowed to control the spread of the virus.\n</p>\n<p>This plot shows the estimated <i>R<sub>t</sub></i> as a function of time. \n\nThe black line is an estimate of the reproductive number as each date for the given data available. The 95% confidence interval of our estimate is shown in shaded gray. The blue line is a 5-day linear projection of the estimated reproductive number based on the 5 most recent days of data.\n\nOur methods for estimating the reproductive number are described in more detail in the whitepaper linked in the \"Methods\" section.</p> \n</div> \nconst plot_I_rate = (unit) => {return (<div>\n<Card.Title className=\"italic\">Infection rate over time </Card.Title>\n<p>This plot shows the number of COVID-19 infections per million people over time.</p>\n{\n(unit === \"district\") &&\n<p>The black line shows the infection rate for the given state. The grey line is the infection rate for the entire country, for comparison. </p>\n}\n</div>)}\nconst plot_total_I = (unit) => {return (<div>\n    <Card.Title className=\"italic\">Active infections over time</Card.Title>\n    <p>This plot shows the total number of COVID-19 infections over time.</p>\n    {\n    (unit === \"district\") &&\n    <p>The black line shows the number of infections for the given state. The grey line is the number of infections for the entire country, for comparison. </p>\n    }\n    </div>)}\nexport const Details = ({viztype, geography}) => {\n    var unit = (geography === \"IN\") ? \"state\" : \"district\"\n    \n    if (viztype === \"map_status\")   { return map_status(unit)   } else \n    if (viztype === \"map_Rt\")       { return map_Rt(unit)       } else \n    if (viztype === \"plot_Rt\")      { return plot_Rt(unit)      } else \n    if (viztype === \"plot_I_rate\")  { return plot_I_rate(unit)  } else \n    if (viztype === \"plot_total_I\") { return plot_total_I(unit) } else  \n    return  <div></div>    \n}\n","import React from \"react\";\n\nimport { Row, Col } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\n\nimport Plot, { state_codes } from \"./components/Plot.js\";\nimport { Details } from \"./components/Details.js\";\nimport \"./App.css\";\n\nconst cardHeader = (name) => (\n  <Card.Header as=\"h2\" class=\"card-header border-dark text-white\" style={{\"background-color\": \"#343a40\", \"opacity\": 0.8}}>\n    {name}\n  </Card.Header>\n);\n// style={{\"background-color\": 'rgba(28, 28, 28, 0.85)'}}\n// style={{}} \n\n// \"#343a40\", 0.95\nexport default class App extends React.Component {\n  state = {\n    vizType: \"map_status\",\n    geography: \"IN\",\n  };\n\n  \n\n  render() {\n    return (\n      <>\n        <div className=\"App container\">\n          <Row>\n            <Col>\n              <Card className=\"text-center\" style={{\"background-color\": \"#343a40\", \"opacity\": 0.95}}> \n                <Card.Body>\n                <h1 className=\"text-white\" style={{\"background-color\": \"#343a40\", \"opacity\": 0.95}}>\n                  {\" \"}\n                  Adaptive Control of COVID-19 in India{\" \"}\n                </h1>\n                <Card.Subtitle as=\"h3\" className=\"text-light\">\n                    {\" \"}\n                    Tracking disease and recommending control efforts across states and districts\n                  </Card.Subtitle>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={8}>\n              <Card id=\"viz_box\">\n                {cardHeader(\"Analysis\")}\n                <Card.Body>\n                  <div>\n                    <Form>\n                      <Row>\n                        <Col>\n                          <Form.Group controlId=\"geoForm\">\n                            <Form.Label className=\"text-dark\">\n                              <b>GEOGRAPHY</b>\n                            </Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              size=\"lg\"\n                              custom\n                              onChange={(e) => {\n                                this.setState({ geography: e.target.value });\n                              }}>\n                              <option value=\"IN\">All India</option>\n                              <optgroup label=\"States\">\n                                {Object.keys(state_codes).map((k) => (\n                                  <option key={k} value={k}>{state_codes[k]}</option>\n                                ))}\n                              </optgroup>\n                            </Form.Control>\n                          </Form.Group>\n                        </Col>\n                        <Col>\n                          <Form.Group controlId=\"vizForm\">\n                            <Form.Label className=\"text-dark\">\n                              <b>VISUALIZATION</b>\n                            </Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              size=\"lg\"\n                              custom\n                              onChange={(e) => {\n                                this.setState({ vizType: e.target.value });\n                              }}>\n                              <optgroup label=\"Maps\">\n                                <option value=\"map_status\">Adaptive Control Status</option>\n                                <option value=\"map_Rt\">Reproductive rate</option>\n                              </optgroup>\n                              <optgroup label=\"Plots\">\n                                <option value=\"plot_Rt\">Reproductive rate</option>\n                                <option value=\"plot_I_rate\">Infection rate</option>\n                                <option value=\"plot_total_I\">Active Infections</option>\n                              </optgroup>\n                            </Form.Control>\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </div>\n                  {/* <Row style={{\"height\":\"100%\"}}> */}\n                  <div id=\"plotwrapper\">\n                  <Plot key={this.state.geography+this.state.vizType} viztype={this.state.vizType} geography={this.state.geography}/>\n                      {/* <Col id=\"plotwrapper\"> \n                      \n                    </Col> */}\n                  </div>\n                  <Row><Col></Col></Row>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col sm={4}>\n              <Card id=\"detail_box\">\n                {cardHeader(\"Details\")}\n                <Card.Body>\n                  <Details viztype={this.state.vizType} geography={this.state.geography} />\n                </Card.Body>\n              </Card>\n              <br></br>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card>\n                {cardHeader(\"COVIN Team\")}\n                <Card.Body>\n                  <p>\n                    The COVIN team is a group of academics from a number of universities (University of Chicago, MIT, Duke, Stanford, among others) that came together after the COVID pandemic struck to develop models and do empirical work to support the response to COVID in India.\n                  </p>\n                  <p>\n                    The parameter estimation and adaptive control model is built on work done by{\" \"}\n                    <a href=\"https://twitter.com/bettencourtluis\">Luis Bettencourt</a>, <a href=\"https://twitter.com/satejsoman\">Satej Soman</a>, and{\" \"}\n                    <a href=\"http://www.anupmalani.com/\">Anup Malani</a> at the University of Chicago, with critical inputs from <a href=\"http://web.mit.edu/dikaiser/www/\">David Kaiser</a>, <a href=\"https://economics.mit.edu/faculty/gruberj/short\">Jon Gruber</a>, and\n                    Stuti Sachdeva at MIT; <a href=\"http://www.idfcinstitute.org/about/people/team/vaidehi-tandel/\">Vaidehi Tandel at IDFC Institute</a>; <a href=\"https://sanford.duke.edu/people/faculty/mohanan-manoj\">Manoj Mohanan</a> at Duke; and many others. It benefited from critical feedback from{' '} <a href=\"https://sph.umich.edu/faculty-profiles/mukherjee-bhramar.html\">Bhramar Mukherjee</a> at the University of Michigan as well as data analysis by <a href=\"https://sites.google.com/site/clemimbert/\">Clément Imbert</a> at the University of Warwick and <a href=\"https://samuelasher.com/\">Sam Asher</a> at Johns Hopkins. <a href=\"https://devavrat.mit.edu/\">Devavrat Shah</a> and\n                    his students at MIT played a critical role in validating our SIR model against a model that used their synthetic intervention methods.\n                  </p>\n                  <p>\n                    Additional analysis, visualization, and engineering was done by Nico Marchio, Manasi Phadnis, Caitlin Loftus, Ananya Karanam, and Thomas\n                    Weil (all at the University of Chicago).\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card>\n                {cardHeader(\"Data Sources\")}\n                <Card.Body>\n                  <p>\n                    The testing, case, and deaths data for India reported on this website and used by our model are drawn from{\" \"}\n                    <a href=\"www.covid19india.org\">Covid19India</a>.\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card>\n                {cardHeader(\"Methods\")}\n                <Card.Body>\n                  <p>\n                    The methods used to forecast infections and reproductive rate, as well as recommendations for control, are described in detail in\n                    our forthcoming whitepaper.\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './corporate.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}